{"version":3,"file":"static/webpack/static/development/pages/update.js.710fc49fff128bcc46af.hot-update.js","sources":["webpack:///./components/UpdateProduct.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Mutation, Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\n\nconst SINGLE_PRODUCT_QUERY = gql`\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\n    product(where: { id: $id }) {\n      id\n      title\n      description\n      originalPrice\n      discount\n      price\n    }\n  }\n`;\nconst UPDATE_PRODUCT_MUTATION = gql`\n    mutation UPDATE_PRODUCT_MUTATION(\n        $id: ID!,\n        $title: String\n        $description: String\n        $price: Int\n        $originalPrice: Int\n        $discount: Int\n    ) {\n    updateProduct(\n        id: $id,\n        title: $title\n        description: $description\n        discount: $discount\n        originalPrice: $originalPrice\n        price: $price    \n      \n    ) {\n        id\n        title\n        description\n        discount\n        originalPrice\n        price\n    }\n  }\n`;\n\nclass UpdateProduct extends Component {\n    state = {\n    };\n\n    handleChange = e => {\n        const { name, type, value } = e.target;\n        const val = type === 'number' ? parseFloat(value) : value;\n        this.setState({ [name]: val });\n    };\n\n    updateProduct = async (e, updateProductMutation) => {\n        e.preventDefault();\n        console.log('Updating Product!!');\n        console.log(this.state);\n        const res = await updateProductMutation({\n          variables: {\n            id: this.props.id,\n            ...this.state,\n          },\n        });\n        console.log('Updated!!');\n    };\n    \n    render() {\n        return (\n            <Query\n                query={SINGLE_PRODUCT_QUERY}\n                variables={{\n                id: this.props.id,\n                }}\n            >\n                {({ data, loading }) => {\n                    if (loading) return <p>Loading...</p>;\n                    if (!data.product) return <p>No product Found for ID {this.props.id}</p>;\n                    return (\n                        <Mutation mutation={UPDATE_PRODUCT_MUTATION} variables={this.state}>\n                            {(updateProduct, { loading, error }) => (\n                                <Form onSubmit={e => this.updateProduct(e, updateProduct)}>\n                                    <Error error={error} />\n                                    <fieldset disabled={loading} aria-busy={loading}>\n                                        \n                                        <label htmlFor=\"title\">\n                                            Title\n                                            <input\n                                            type=\"text\"\n                                            id=\"title\"\n                                            name=\"title\"\n                                            placeholder=\"Title\"\n                                            required\n                                            defaultValue={data.product.title}\n                                            onChange={this.handleChange}\n                                            />\n                                        </label>\n                            \n                                        <label htmlFor=\"description\">\n                                            Description\n                                            <textarea\n                                            id=\"description\"\n                                            name=\"description\"\n                                            placeholder=\"Enter A Description\"\n                                            required\n                                            defaultValue={data.product.description}\n                                            onChange={this.handleChange}\n                                            />\n                                        </label>\n                                        \n                                        <label htmlFor=\"originalprice\">\n                                            Original Price\n                                            <input\n                                            type=\"number\"\n                                            id=\"originalPrice\"\n                                            name=\"originalPrice\"\n                                            placeholder=\"originalPrice\"\n                                            required\n                                            defaultValue={data.product.originalPrice}\n                                            onChange={this.handleChange}\n                                            />\n                                        </label>\n\n                                        <label htmlFor=\"discount\">\n                                            Discount\n                                            <input\n                                            type=\"number\"\n                                            id=\"discount\"\n                                            name=\"discount\"\n                                            placeholder=\"discount\"\n                                            required\n                                            defaultValue={data.product.discount}\n                                            onChange={this.handleChange}\n                                            />\n                                        </label>\n\n                                        <label htmlFor=\"price\">\n                                            Price\n                                            <input\n                                            type=\"number\"\n                                            id=\"price\"\n                                            name=\"price\"\n                                            placeholder=\"Price\"\n                                            required\n                                            defaultValue={data.product.price}\n                                            onChange={this.handleChange}\n                                            />\n                                        </label>\n\n                                        \n                                        <button type=\"submit\">Update</button>\n                                    </fieldset>\n                                </Form>\n                            )}\n                        </Mutation>\n                    );\n                }}\n            </Query>\n        );\n    }\n}\nexport default UpdateProduct;\nexport { UPDATE_PRODUCT_MUTATION };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAYA;AACA;AA2BA;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AACA;AADA;AADA;AACA;AALA;AAIA;AAMA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAYA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtEA;AA4EA;AAGA;;;;AAnHA;AACA;AAoHA;;;;;A","sourceRoot":""}