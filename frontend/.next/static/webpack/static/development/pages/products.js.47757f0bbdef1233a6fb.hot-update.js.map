{"version":3,"file":"static/webpack/static/development/pages/products.js.47757f0bbdef1233a6fb.hot-update.js","sources":["webpack:///./components/Pagination.js"],"sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport PaginationStyles from './styles/PaginationStyles';\nimport { perPage } from '../config';\n\nconst PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    productsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\nconst Pagination = props => (\n    <Query query={PAGINATION_QUERY}>\n      {({ data, loading, error }) => {\n        if (loading) return <p>Loading...</p>;\n        const count = data.productsConnection.aggregate.count;\n        const pages = Math.ceil(count / perPage);\n        const page = props.page;\n        return (\n          <PaginationStyles data-test=\"pagination\">\n            <Head>\n              <title>\n                Sick Fits! — Page {page} of {pages}\n              </title>\n            </Head>\n            <Link\n              prefetch\n              href={{\n                pathname: 'products',\n                query: { page: page - 1 },\n              }}\n            >\n              <a className=\"prev\" aria-disabled={page <= 1}>\n                ← Prev\n              </a>\n            </Link>\n            <p>\n              Page {props.page} of&nbsp;\n              <span className=\"totalPages\">{ pages}</span>!\n            </p>\n            <p>{count} Products Total</p>\n            <Link\n              prefetch\n              href={{\n                pathname: 'products',\n                query: { page: page + 1 },\n              }}\n            >\n              <a className=\"next\" aria-disabled={page >= pages}>\n                Next →\n              </a>\n            </Link>\n          </PaginationStyles>\n        );\n      }}\n    </Query>\n  );\n\nexport default Pagination;\nexport { PAGINATION_QUERY };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAQA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AA3CA;AACA;AA8CA;;;;;A","sourceRoot":""}