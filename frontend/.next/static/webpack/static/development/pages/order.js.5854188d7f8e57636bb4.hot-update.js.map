{"version":3,"file":"static/webpack/static/development/pages/order.js.5854188d7f8e57636bb4.hot-update.js","sources":["webpack:///./components/Order.js"],"sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { Query } from 'react-apollo';\nimport { format } from 'date-fns';\nimport Head from 'next/head';\nimport gql from 'graphql-tag';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\nimport OrderStyles from './styles/OrderStyles';\n\nconst SINGLE_ORDER_QUERY = gql`\n  query SINGLE_ORDER_QUERY($id: ID!) {\n    order(id: $id) {\n      id\n      charge\n      total\n      createdAt\n      user {\n        id\n      }\n      products {\n        id\n        title\n        description\n        price\n        image\n        quantity\n      }\n    }\n  }\n`;\nclass Order extends Component {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n      };\n      render() {\n        return (\n          <Query query={SINGLE_ORDER_QUERY} variables={{ id: this.props.id }}>\n            {({ data, error, loading }) => {\n                if (error) return <Error error={error} />;\n                if (loading) return <p>Loading...</p>;\n                const order = data.order;\n                return (\n                    <OrderStyles data-test=\"order\">\n                        <Head>\n                            <title>Price Deal - Order {order.id}</title>\n                        </Head>\n                        <p>\n                            <span>Order ID:</span>\n                            <span>{this.props.id}</span>\n                        </p>\n                        <p>\n                            <span>Charge</span>\n                            <span>{order.charge}</span>\n                        </p>\n                        <p>\n                            <span>Date</span>\n                            <span>{format(order.createdAt, 'MMMM d, YYYY h:mm a')}</span>\n                        </p>\n                        <p>\n                            <span>Order Total</span>\n                            <span>{formatMoney(order.total)}</span>\n                        </p>\n                        <p>\n                            <span>Product Count</span>\n                            <span>{order.products.length}</span>\n                        </p>\n                        <div className=\"items\">\n                            {order.products.map(product => (\n                                <div className=\"order-item\" key={product.id}>\n                                    <img src={product.image} alt={product.title} />\n                                    <div className=\"item-details\">\n                                    <h2>{product.title}</h2>\n                                    <p>Qty: {product.quantity}</p>\n                                    <p>Each: {formatMoney(product.price)}</p>\n                                    <p>SubTotal: {formatMoney(product.price * product.quantity)}</p>\n                                    <p>{product.description}</p>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    </OrderStyles>\n                );\n            }}\n          </Query>\n        );\n    }\n}\n\nexport default Order;\nexport { SINGLE_ORDER_QUERY };\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAoBA;;;;;;;;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAeA;AAGA;;;;AAvDA;AACA;AADA;AAEA;AADA;AACA;AAwDA;;;;;A","sourceRoot":""}