{"version":3,"file":"static/webpack/static/development/pages/sell.js.40ae06a4099a64d5f04f.hot-update.js","sources":["webpack:///./components/CreateProduct.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\n\nconst CREATE_PRODUCT_MUTATION = gql`\n  mutation CREATE_PRODUCT_MUTATION(\n    $title: String!\n    $description: String!\n    $price: Int!\n    $originalPrice: Int!\n    $discount: Int\n    $image: String\n    $largeImage: String\n  ) {\n    createProduct(\n      title: $title\n      description: $description\n      price: $price\n      originalPrice: $originalPrice\n      discount: $discount\n      image: $image\n      largeImage: $largeImage\n    ) {\n      id\n    }\n  }\n`;\n\nclass CreateProduct extends Component {\n    state = {\n        title: '',\n        description: '',\n        image: '',\n        largeImage: '',\n        price: 0,\n    };\n\n    handleChange = e => {\n        const { name, type, value } = e.target;\n        const val = type === 'number' ? parseFloat(value) : value;\n        this.setState({ [name]: val });\n      };\n\n    uploadFile = async e => {\n        const files = e.target.files;\n        const data = new FormData();\n        data.append('file', files[0]);\n        data.append('upload_preset', 'price-deal');\n\n        const res = await fetch('https://api.cloudinary.com/v1_1/inventive-labs/image/upload', {\n            method: 'POST',\n            body: data,\n        });\n        const file = await res.json();\n        this.setState({\n            image: file.secure_url,\n            largeImage: file.eager[0].secure_url,\n        });\n    };\n    \n    render() {\n        return (\n            <Mutation mutation={CREATE_PRODUCT_MUTATION} variables={this.state}>\n                {(createProduct, { loading, error }) => (\n                <Form\n                    data-test=\"form\"\n                    onSubmit={async e => {\n                    // Stop the form from submitting\n                        e.preventDefault();\n                        // call the mutation\n                        const res = await createProduct();\n                        // change them to the single Product page\n                        console.log(res);\n                        Router.push({\n                            pathname: '/product',\n                            query: { id: res.data.createProduct.id },\n                        });\n                    }}\n                >\n                    <Error error={error} />\n                    <fieldset disabled={loading} aria-busy={loading}>\n                        <label htmlFor=\"file\">\n                            Image\n                            <input\n                            type=\"file\"\n                            id=\"file\"\n                            name=\"file\"\n                            placeholder=\"Upload an image\"\n                            required\n                            onChange={this.uploadFile}\n                            />\n                            {this.state.image && (\n                            <img width=\"200\" src={this.state.image} alt=\"Upload Preview\" />\n                            )}\n                        </label>\n                        <label htmlFor=\"title\">\n                            Title\n                            <input\n                            type=\"text\"\n                            id=\"title\"\n                            name=\"title\"\n                            placeholder=\"Title\"\n                            required\n                            value={this.state.title}\n                            onChange={this.handleChange}\n                            />\n                        </label>\n            \n                        <label htmlFor=\"price\">\n                            Price\n                            <input\n                            type=\"number\"\n                            id=\"price\"\n                            name=\"price\"\n                            placeholder=\"Price\"\n                            required\n                            value={this.state.price}\n                            onChange={this.handleChange}\n                            />\n                        </label>\n            \n                        <label htmlFor=\"description\">\n                            Description\n                            <textarea\n                            id=\"description\"\n                            name=\"description\"\n                            placeholder=\"Enter A Description\"\n                            required\n                            value={this.state.description}\n                            onChange={this.handleChange}\n                            />\n                        </label>\n                        <button type=\"submit\">Submit</button>\n                    </fieldset>\n                </Form>\n                )}\n            </Mutation>\n        );\n    }\n}\nexport default CreateProduct;\nexport { CREATE_PRODUCT_MUTATION };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAuBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAOA;AACA;AAFA;AACA;AAPA;AAMA;AANA;AAAA;AACA;AADA;AAUA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAgBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AArEA;AA2EA;;;;AA9GA;AACA;AA+GA;;;;;A","sourceRoot":""}